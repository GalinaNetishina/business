"""init

Revision ID: 0379fd2d6a58
Revises:
Create Date: 2024-11-13 21:46:54.152734

"""

from typing import Sequence, Union

import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0379fd2d6a58"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "company",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("inn", sa.Integer(), nullable=False, unique=True),
        sa.Column("company_name", sa.String(length=256), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("inn"),
    )
    op.create_table(
        "position",
        sa.Column("path", sqlalchemy_utils.types.ltree.LtreeType(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_positions_path", "position", ["path"], unique=False, postgresql_using="gist"
    )
    op.create_table(
        "structure",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.UUID(), nullable=True),
        sa.Column("positions", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.ForeignKeyConstraint(
            ["positions"],
            ["position.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("password", sa.LargeBinary(), nullable=False),
        sa.Column("email", sa.String(length=70), nullable=True),
        sa.Column("company_id", sa.UUID(), nullable=True),
        sa.Column(
            "is_active", sa.Boolean(), server_default=sa.text("true"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "task",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "importance",
            sa.Enum("TOP", "MIDDLE", "STANDARD", name="priorities"),
            server_default=sa.text("'STANDARD'"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "CREATED",
                "IN_WORK",
                "ON_MODERATION",
                "CANCELED",
                "DONE",
                name="statuses",
            ),
            server_default=sa.text("'CREATED'"),
            nullable=False,
        ),
        sa.Column("details", sa.String(), nullable=True),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column(
            "start_data",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column(
            "update_data",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("additional", sa.JSON(), nullable=True),
        sa.Column("observer_id", sa.UUID(), nullable=True),
        sa.Column("performer_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["observer_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["performer_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task")
    op.drop_table("user")
    op.drop_table("structure")
    op.drop_index("ix_positions_path", table_name="position", postgresql_using="gist")
    op.drop_table("position")
    op.drop_table("company")
    # ### end Alembic commands ###
